{"version":3,"file":"static/js/63.fb7e140b.chunk.js","mappings":"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","sources":["components/api.js","pages/cast/Cast-styled.jsx","pages/cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MGI2NDgwNDc5YzAzZTc3NWUzMjVjYjYwMzE0ZWQzNyIsInN1YiI6IjY1NWQwZjMyZmQ0YTk2MDExZDdjZWQ0NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.h0NSH3GJLeS6PsHBeS_cxj_EQCA2z07_Csj8ebrIqNI',\n  },\n};\n\nexport const fetchTrendinsMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n\n    options\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesDetailsById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n\n    options\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByValue = async value => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${value}&include_adult=true&language=en-US&page=1`,\n\n    options\n  );\n  return response.data.results;\n};\nexport const fetchMoviesCastById = async id => {\n  const response = await axios.get(\n    `  https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n\n    options\n  );\n  return response.data.cast;\n};\n\nexport const fetchMoviesReviewsById = async id => {\n  const response = await axios.get(\n    `  https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n\n    options\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  margin-bottom: 10px;\n\n  list-style-type: inherit;\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchMoviesCastById } from '../../components/api';\nimport Notiflix from 'notiflix';\nimport { useParams } from 'react-router-dom';\nimport { CastList } from './Cast-styled';\n\nconst defaultImage =\n  'https://cdn.vectorstock.com/i/preview-1x/65/30/default-image-icon-missing-picture-page-vector-40546530.jpg';\n\nexport default function Cast() {\n  const [castsList, setCastsList] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function loadCastsList() {\n      try {\n        const cast = await fetchMoviesCastById(movieId);\n\n        setCastsList(cast);\n      } catch (error) {\n        Notiflix.Notify.failure(error.message);\n      }\n    }\n    loadCastsList();\n  }, [movieId]);\n\n  return (\n    <div>\n      <CastList>\n        {castsList.map(item => {\n          const { name, character, profile_path } = item;\n          return (\n            <li key={item.id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : defaultImage\n                }\n                alt=\"Face\"\n                width=\"100px\"\n                height=\"150px\"\n              />\n              <p>{name}</p>\n              <p>Character:{character}</p>\n            </li>\n          );\n        })}\n      </CastList>\n    </div>\n  );\n}\n"],"names":["options","headers","accept","Authorization","fetchTrendinsMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesDetailsById","_ref2","_callee2","id","_context2","concat","_x","fetchMoviesByValue","_ref3","_callee3","value","_context3","_x2","fetchMoviesCastById","_ref4","_callee4","_context4","cast","_x3","fetchMoviesReviewsById","_ref5","_callee5","_context5","_x4","CastList","styled","_templateObject","_taggedTemplateLiteral","Cast","_useState","useState","_useState2","_slicedToArray","castsList","setCastsList","movieId","useParams","useEffect","_loadCastsList","t0","Notiflix","message","loadCastsList","_jsx","children","map","item","name","character","profile_path","_jsxs","src","alt","width","height"],"sourceRoot":""}