{"version":3,"file":"static/js/578.35c34787.chunk.js","mappings":"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","sources":["components/api.js","pages/reviews/Reviews-styled.jsx","pages/reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MGI2NDgwNDc5YzAzZTc3NWUzMjVjYjYwMzE0ZWQzNyIsInN1YiI6IjY1NWQwZjMyZmQ0YTk2MDExZDdjZWQ0NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.h0NSH3GJLeS6PsHBeS_cxj_EQCA2z07_Csj8ebrIqNI',\n  },\n};\n\nexport const fetchTrendinsMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n\n    options\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesDetailsById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n\n    options\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByValue = async value => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${value}&include_adult=true&language=en-US&page=1`,\n\n    options\n  );\n  return response.data.results;\n};\nexport const fetchMoviesCastById = async id => {\n  const response = await axios.get(\n    `  https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n\n    options\n  );\n  return response.data.cast;\n};\n\nexport const fetchMoviesReviewsById = async id => {\n  const response = await axios.get(\n    `  https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n\n    options\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n`;\n\n\nexport const Author = styled.div`\n font-size: 16px;\n font-weight: 600;\n`;\n\n\nexport const Text = styled.p`\n font-size: 14px;\n\n`;\n\n","import { useEffect, useState } from 'react';\nimport { fetchMoviesReviewsById } from '../../components/api';\nimport Notiflix from 'notiflix';\nimport { useParams } from 'react-router-dom';\nimport { ReviewList } from './Reviews-styled';\nimport { Author } from './Reviews-styled';\nimport { Text } from './Reviews-styled';\n\nexport default function Reviews() {\n  const [reviewText, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function loadReviews() {\n      try {\n        const review = await fetchMoviesReviewsById(movieId);\n        setReviews(review);\n      } catch (error) {\n        Notiflix.Notify.failure(error.message);\n      }\n    }\n\n    loadReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviewText.length > 0 ? (\n        <ReviewList>\n          {' '}\n          {reviewText.map(item => (\n            <li>\n              <Author>Author: {item.author}</Author>\n              <Text>{item.content}</Text>\n            </li>\n          ))}\n        </ReviewList>\n      ) : (\n        <span>We don't have any reviews for this movie</span>\n      )}\n    </div>\n  );\n}\n"],"names":["options","headers","accept","Authorization","fetchTrendinsMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesDetailsById","_ref2","_callee2","id","_context2","concat","_x","fetchMoviesByValue","_ref3","_callee3","value","_context3","_x2","fetchMoviesCastById","_ref4","_callee4","_context4","cast","_x3","fetchMoviesReviewsById","_ref5","_callee5","_context5","_x4","ReviewList","styled","_templateObject","_taggedTemplateLiteral","Author","_templateObject2","Text","_templateObject3","Reviews","_useState","useState","_useState2","_slicedToArray","reviewText","setReviews","movieId","useParams","useEffect","_loadReviews","review","t0","Notiflix","message","loadReviews","_jsx","children","length","_jsxs","map","item","author","content"],"sourceRoot":""}