{"version":3,"file":"static/js/326.adbe7ee8.chunk.js","mappings":"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","sources":["components/api.js","pages/moviedetails/MovieDetails-styled.jsx","pages/moviedetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MGI2NDgwNDc5YzAzZTc3NWUzMjVjYjYwMzE0ZWQzNyIsInN1YiI6IjY1NWQwZjMyZmQ0YTk2MDExZDdjZWQ0NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.h0NSH3GJLeS6PsHBeS_cxj_EQCA2z07_Csj8ebrIqNI',\n  },\n};\n\nexport const fetchTrendinsMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n\n    options\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesDetailsById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n\n    options\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByValue = async value => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${value}&include_adult=true&language=en-US&page=1`,\n\n    options\n  );\n  return response.data.results;\n};\nexport const fetchMoviesCastById = async id => {\n  const response = await axios.get(\n    `  https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n\n    options\n  );\n  return response.data.cast;\n};\n\nexport const fetchMoviesReviewsById = async id => {\n  const response = await axios.get(\n    `  https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n\n    options\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const DetailsContainer = styled.header`\n  display: flex;\n  padding: 15px;\n  border-bottom: 2px;\n  box-shadow: 7px 3px 3px lightgrey;\n  margin-bottom: 10px;\n`;\nexport const ListOfDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 15px;\n`;\n\nexport const ListOfGenres = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 5px;\n  padding-left: 0px;\n`;\nexport const AdditionalContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  list-style-type: inherit;\n  border-bottom: 2px;\n  box-shadow: 7px 3px 3px lightgrey;\n  margin-bottom: 10px;\n  padding-bottom: 15px;\n  padding-left: 40px;\n\n`;\n","import { useEffect, useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { fetchMoviesDetailsById } from '../../components/api';\nimport { DetailsContainer } from './MovieDetails-styled';\nimport { AdditionalContainer } from './MovieDetails-styled';\nimport { ListOfDetails } from './MovieDetails-styled';\nimport { ListOfGenres } from './MovieDetails-styled';\nimport { Outlet, Link, useParams } from 'react-router-dom';\n\nexport default function MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState({});\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function loadMovieDetails() {\n      try {\n        const details = await fetchMoviesDetailsById(movieId);\n        setMovieDetails(details);\n      } catch (error) {\n        Notiflix.Notify.failure(error.message);\n      }\n    }\n    loadMovieDetails();\n  }, [movieId]);\n\n  const { genres, title, overview, popularity, poster_path } = movieDetails;\n\n  if (!poster_path) {\n    return <div>...Loading</div>;\n  }\n\n  return (\n    <div>\n      <button>\n        <Link to=\"/\">Go back</Link>\n      </button>\n      <DetailsContainer>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt=\"Poster\"\n          width=\"280px\"\n          height=\"400px\"\n        />\n        <ListOfDetails>\n          <h1> {title}</h1>\n          <p>User score: {Math.round(popularity)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <ListOfGenres>\n            {genres?.map(item => (\n              <li key={item.id}>{item.name}</li>\n            ))}\n          </ListOfGenres>\n        </ListOfDetails>\n      </DetailsContainer>\n\n      <span>Additional information</span>\n      <AdditionalContainer>\n        <li>\n          <Link to={`cast`}>Cast</Link>\n        </li>\n\n        <li>\n          <Link to={`reviews`}>Reviews</Link>\n        </li>\n      </AdditionalContainer>\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["options","headers","accept","Authorization","fetchTrendinsMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesDetailsById","_ref2","_callee2","id","_context2","concat","_x","fetchMoviesByValue","_ref3","_callee3","value","_context3","_x2","fetchMoviesCastById","_ref4","_callee4","_context4","cast","_x3","fetchMoviesReviewsById","_ref5","_callee5","_context5","_x4","DetailsContainer","styled","_templateObject","_taggedTemplateLiteral","ListOfDetails","_templateObject2","ListOfGenres","_templateObject3","AdditionalContainer","_templateObject4","MovieDetails","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","movieId","useParams","useEffect","_loadMovieDetails","details","t0","Notiflix","message","loadMovieDetails","genres","title","overview","popularity","poster_path","_jsxs","children","_jsx","Link","to","src","alt","width","height","Math","round","map","item","name","Outlet"],"sourceRoot":""}